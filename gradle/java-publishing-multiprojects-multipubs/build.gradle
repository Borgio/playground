//
//
//

group = 'io.example'
version = '1.0'

apply plugin: 'maven-publish'

subprojects {

    ext {

        isApi = project.name.contains("api")
    }

    apply plugin: 'java'

    task copySources(type: Copy) {

        from 'src/main/java'
        into parent.buildDir.path + (project.isApi ? "/api-sources" : "/rt-sources")

        doLast {

            println "copied from src/main/java to " + parent.buildDir.path + (project.isApi ? "/api-sources" : "/rt-sources")
        }
    }

    task copyClasses(type: Copy) {

        from 'build/classes/java/main'
        into parent.buildDir.path + (project.isApi ? "/api-classes" : "/rt-classes")

        dependsOn 'build'

        doLast {

            println "copied from src/main/java to " + parent.buildDir.path + (project.isApi ? "/api-sources" : "/rt-sources")
        }
    }

    task copyArtifacts {

        dependsOn 'copySources', 'copyClasses'
    }

}

task archive {

    dependsOn 'apiSources', 'apiClasses', 'archiveRtSources', 'runtimeClasses'
}

task apiSources(type: Jar) {

    baseName = 'blue-api'
    classifier = 'sources'
    destinationDir = buildDir
    from buildDir.path + "/api-sources"
}

task apiClasses(type: Jar) {

    baseName = 'blue-api'
    destinationDir = buildDir
    from buildDir.path + "/api-classes"
}

task runtimeSources(type: Jar) {

    baseName = 'blue-rt'
    classifier = 'sources'
    destinationDir = buildDir
    from buildDir.path + "/rt-sources"
}

task runtimeClasses(type: Jar) {

    baseName = 'blue-rt'
    destinationDir = buildDir
    from buildDir.path + "/rt-classes"
}

publishing {

    publications {

        api(MavenPublication) {

            groupId 'io.example.blue'
            artifactId 'blue-api'
            artifact apiSources
            artifact apiClasses
        }

        runtime(MavenPublication) {

            groupId 'io.example.blue'
            artifactId 'blue-rt'
            artifact runtimeSources
            artifact runtimeClasses
        }
    }

    repositories {

        mavenLocal()
    }
}

task clean(type: Delete) {

    delete 'build'
}